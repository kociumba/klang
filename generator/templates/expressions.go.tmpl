{{- define "expression" -}}
{{- if .Equality}}{{template "equality" .Equality}}{{- end -}}
{{- end}}

{{- define "equality" -}}
{{- template "comparison" .Comparison}}{{if .Op}}{{if eq .Op "=="}} == {{else}} != {{end}}{{template "equality" .Next}}{{- end -}}
{{- end}}

{{- define "comparison" -}}
{{- template "addition" .Addition}}{{if .Op}} {{.Op}} {{template "comparison" .Next}}{{- end -}}
{{- end}}

{{- define "addition" -}}
{{- template "multiplication" .Multiplication}}{{if .Op}} {{.Op}} {{template "addition" .Next}}{{- end -}}
{{- end}}

{{- define "multiplication" -}}
{{- template "unary" .Unary}}{{if .Op}} {{.Op}} {{template "multiplication" .Next}}{{- end -}}
{{- end}}

{{- define "unary" -}}
  {{- if .Op}}
    {{- if eq .Op "&"}}&{{else if eq .Op "*"}}*{{else}}{{.Op}}{{end}}
    {{template "unary" .Unary}}
  {{- else}}
    {{template "primary" .Primary}}
  {{- end -}}
{{- end -}}

{{- define "primary" -}}
  {{template "primary_base" .Base}}{{range .Postfixes}}{{template "postfix" .}}{{end}}
{{- end -}}

{{- define "primary_base" -}}
  {{- if .Number}}{{.Number}}
  {{- else if .String}}{{.String}}
  {{- else if .Bool}}{{if .Bool}}true{{else}}false{{end}}
  {{- else if .Nil}}NULL
  {{- else if .FuncCall}}{{template "func_call" .FuncCall}}
  {{- else if .Ident}}{{.Ident}}
  {{- else if .SubExpression}}({{template "expression" .SubExpression}})
  {{- else if .ArrayLiteral}}{{template "array_literal" .ArrayLiteral}}
  {{- end -}}
{{- end -}}

{{- define "postfix" -}}
  {{- if .IndexAccess}}[{{template "expression" .IndexAccess.Index}}]{{end -}}
{{- end -}}